apiVersion: apps/v1           # API version
kind: Deployment              # Type of kubernetes resource
metadata:
  name: edge-deployment    # Name of the deployment
  labels:                     # Labels that will be applied to this deployment
    app: edge-service
spec:
  replicas: 1                 # No. of replicas/pods to run in this deployment
  selector:
    matchLabels:              # The deployment applies to any pods mayching the specified labels
      app: edge-service
  template:                   # Template for creating the pods in this deployment
    metadata:
      labels:                 # Labels that will be applied to each Pod in this deployment
        app: edge-service
    spec:                     # Spec for the containers that will be run in the Pods
      containers:
        - name: edge-service
          image: vanhouttejan4/edgems
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8050 # The port that the container exposes
          resources:
            limits:
              cpu: 0.2
              memory: "200Mi"
          env:                    # Environment variables supplied to the Pod
            - name: MOVIEMS_HOST
              value: "10.100.3.1:8053"
            - name: REVIEWMS_HOST
              value: "review-service"
            - name: WATCHLISTMS_HOST
              value: "watchlist-service"
            - name: GENREMS_HOST
              value: "10.100.4.1:8054"

---
apiVersion: v1                      # API version
kind: Service                       # Type of the kubernetes resource
metadata:
  name: edge-service    # Name of the service
  labels:                           # Labels that will be applied to this service
    app: edge-service
spec:
  type: NodePort                    # The service will be exposed by opening a Port on each node and proxying it. Allowing connections from outside the cluster
  selector:
    app: edge-service   # The service exposes Pods with label `app=book-info-service-server`
  ports:                            # Forward incoming connections on port 8080 to the target port 8051
    - name: http
      port: 8050
      nodePort: 32000